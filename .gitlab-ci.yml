stages:
  - build

variables:
  IMAGE_DESC: "Brickman240 updated images with tuxedo drivers"
  # IMPORTANT: Remplacez VOTRE_USERNAME par votre nom d'utilisateur Docker Hub
  IMAGE_REGISTRY: "docker.io/nyaker000"
  ARTIFACTHUB_LOGO_URL: "https://avatars.githubusercontent.com/u/120078124?s=200&v=4"
  # Use buildah for container builds
  BUILDAH_FORMAT: "oci"
  BUILDAH_ISOLATION: "chroot"

# Only run pipeline on main and blackaurora branches, MRs, and scheduled pipelines
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "blackaurora"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"

# Template for building container images
.build-image-template:
  stage: build
  image: quay.io/buildah/stable:latest
  before_script:
    - buildah version
    # Login to Docker Hub (only on main/blackaurora, not on MRs)
    - |
      if [ "$CI_COMMIT_BRANCH" = "main" ] || [ "$CI_COMMIT_BRANCH" = "blackaurora" ]; then
        echo "$DOCKERHUB_TOKEN" | buildah login -u "$DOCKERHUB_USERNAME" --password-stdin docker.io
      fi
  script:
    - |
      # Get current date
      CURRENT_DATE=$(date -u +%Y%m%d)
      CURRENT_ISO_DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)
      
      # Build tags
      IMAGE_FULL="${IMAGE_REGISTRY}/${IMAGE_NAME}"
      IMAGE_FULL_LOWER=$(echo "$IMAGE_FULL" | tr '[:upper:]' '[:lower:]')
      
      # Determine tags based on pipeline type
      if [ "$CI_PIPELINE_SOURCE" = "merge_request_event" ]; then
        TAGS="mr-${CI_MERGE_REQUEST_IID} sha-${CI_COMMIT_SHORT_SHA}"
      else
        TAGS="latest latest.${CURRENT_DATE} ${CURRENT_DATE}"
      fi
      
      echo "Building image: $IMAGE_FULL_LOWER"
      echo "Tags: $TAGS"
      echo "Containerfile: $CONTAINERFILE"
      
      # Build the image with labels
      buildah bud \
        --format=oci \
        --file="$CONTAINERFILE" \
        --label="io.artifacthub.package.readme-url=https://gitlab.com/${CI_PROJECT_PATH}/-/blob/main/README.md" \
        --label="org.opencontainers.image.created=${CURRENT_ISO_DATE}" \
        --label="org.opencontainers.image.description=${IMAGE_DESC}" \
        --label="org.opencontainers.image.documentation=https://gitlab.com/${CI_PROJECT_PATH}/-/blob/main/README.md" \
        --label="org.opencontainers.image.source=https://gitlab.com/${CI_PROJECT_PATH}/-/blob/main/${CONTAINERFILE}" \
        --label="org.opencontainers.image.title=${IMAGE_NAME}" \
        --label="org.opencontainers.image.url=https://gitlab.com/${CI_PROJECT_PATH}" \
        --label="org.opencontainers.image.vendor=${CI_PROJECT_NAMESPACE}" \
        --label="org.opencontainers.image.version=latest" \
        --label="org.opencontainers.image.revision=${CI_COMMIT_SHA}" \
        --label="io.artifacthub.package.deprecated=false" \
        --label="io.artifacthub.package.keywords=bootc,ublue,universal-blue" \
        --label="io.artifacthub.package.license=Apache-2.0" \
        --label="io.artifacthub.package.logo-url=${ARTIFACTHUB_LOGO_URL}" \
        --label="io.artifacthub.package.prerelease=false" \
        --label="containers.bootc=1" \
        --tag="${IMAGE_FULL_LOWER}:build" \
        .
      
      # Tag and push the image (only on main/blackaurora branches, not on MRs)
      if [ "$CI_COMMIT_BRANCH" = "main" ] || [ "$CI_COMMIT_BRANCH" = "blackaurora" ]; then
        for tag in $TAGS; do
          echo "Tagging and pushing: ${IMAGE_FULL_LOWER}:${tag}"
          buildah tag "${IMAGE_FULL_LOWER}:build" "${IMAGE_FULL_LOWER}:${tag}"
          buildah push "${IMAGE_FULL_LOWER}:${tag}"
        done
        
        # Optional: Sign with cosign if COSIGN_PRIVATE_KEY secret is configured
        if [ -n "$COSIGN_PRIVATE_KEY" ]; then
          echo "Signing container images with cosign..."
          # Install cosign
          wget -q -O /usr/local/bin/cosign https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x /usr/local/bin/cosign
          
          for tag in $TAGS; do
            echo "$COSIGN_PRIVATE_KEY" | cosign sign -y --key env://COSIGN_PRIVATE_KEY "${IMAGE_FULL_LOWER}:${tag}"
          done
        fi
      else
        echo "Skipping push - not on main or blackaurora branch (MR preview only)"
      fi
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "blackaurora"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"

# Build jobs for Aurora variants
build-aurora-blackdx:
  extends: .build-image-template
  variables:
    CONTAINERFILE: "Containerfiles/aurora/blackdx/Containerfile"
    IMAGE_NAME: "tuxedo-aurora-black"

build-aurora-dx:
  extends: .build-image-template
  variables:
    CONTAINERFILE: "Containerfiles/aurora/dx/Containerfile"
    IMAGE_NAME: "tuxedo-aurora-dx"

build-aurora-nodrivers:
  extends: .build-image-template
  variables:
    CONTAINERFILE: "Containerfiles/aurora/nodrivers/Containerfile"
    IMAGE_NAME: "aurora-custom"

# Build jobs for Bluefin variants
build-bluefin-blackdx:
  extends: .build-image-template
  variables:
    CONTAINERFILE: "Containerfiles/bluefin/blackdx/Containerfile"
    IMAGE_NAME: "tuxedo-bluefin-black"

build-bluefin-dx:
  extends: .build-image-template
  variables:
    CONTAINERFILE: "Containerfiles/bluefin/dx/Containerfile"
    IMAGE_NAME: "tuxedo-bluefin-dx"

build-bluefin-nodrivers:
  extends: .build-image-template
  variables:
    CONTAINERFILE: "Containerfiles/bluefin/nodrivers/Containerfile"
    IMAGE_NAME: "bluefin-custom"
